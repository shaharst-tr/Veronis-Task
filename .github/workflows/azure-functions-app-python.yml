# This workflow deploys an Azure Function App using Terraform and Python
# It includes steps for initializing Terraform, validating, planning, and applying the configuration
# and then deploying the function app with the specified publish profile
#
on:
  push:
    branches: ["feature/assignment"]

permissions:
  id-token: write # Required for OIDC authentication
  contents: read

jobs:
  terraform:
    name: "Terraform Infrastructure Deployment"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0" # Specify the Terraform version you need

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: |
          cd terraform  # Adjust if your Terraform files are in a different directory
          terraform init

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      # Optionally store outputs from Terraform to use in the next job
      - name: Export Terraform Outputs
        id: terraform-outputs
        run: |
          cd terraform
          echo "function_app_name=$(terraform output -raw function_app_name)" >> $GITHUB_ENV
          echo "resource_group=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV
        continue-on-error: true # In case these specific outputs don't exist

  deploy-function:
    name: "Deploy Azure Function App"
    needs: terraform # Wait for terraform job to complete
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" # Set to the Python version your function uses

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install azure-functions-core-tools@4 --ignore-installed

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Function App Publish Profile
        id: get-publish-profile
        run: |
          PUBLISH_PROFILE=$(az functionapp deployment list-publishing-profiles --name restaurant-api-func --resource-group ${{ env.resource_group || 'your-resource-group-name' }} --xml)
          echo "::add-mask::$PUBLISH_PROFILE"
          echo "PUBLISH_PROFILE=$PUBLISH_PROFILE" >> $GITHUB_ENV

      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: "restaurant-api-func" # Or use ${{ env.function_app_name }} if set by Terraform
          package: "."
          publish-profile: ${{ env.PUBLISH_PROFILE }}
          respect-funcignore: true
          scm-do-build-during-deployment: true
